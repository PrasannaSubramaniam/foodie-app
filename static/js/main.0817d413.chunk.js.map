{"version":3,"sources":["resources/images/logo.png","resources/images/logoWhite.png","resources/images/restPlaceholder.jpg","components/TextInput.js","components/CommonButton.js","pages/LoginPage.js","components/HeaderBar.js","services/RestaurantService.js","components/RestaurantCard.js","pages/RestaurantListPage.js","components/OrderItem.js","components/OrdersView.js","components/CartItem.js","components/CartView.js","pages/OrdersPage.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","TextInput","type","this","props","className","placeholder","value","onChange","event","React","Component","CommonButton","onClick","LoginPage","state","userName","password","src","logo","action","setState","target","history","push","href","HeaderBar","logoWhite","alt","RestaurantService","restaurantsData","MockData","restaurantsList","fetchRestaurantsData","forEach","restaurant","restData","id","name","reviews","cuisines","rating","img","feature_image","console","log","JSON","parse","stringify","restaurantDetail","find","RestaurantCard","restPlaceHolder","RestaurantListPage","isLoading","error","data","fetchRestaurantList","getRestaurantsList","length","map","res","key","OrderItem","item","onAddToCart","desc","price","OrdersView","address","menu","index","CartItem","onIncrement","onDecrement","quantity","readOnly","CartView","cart","items","subTotal","deliveryCharges","coupon","grandTotal","OrdersPage","handleAddToCart","findIndex","element","handleIncrement","newItem","calculateTotal","newItems","handleDecrement","splice","fetchRestaurantDetails","match","params","getRestaurantDetail","restaurantDetails","App","exact","path","component","render","Boolean","window","location","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.0817d413.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.542d27c8.png\";","module.exports = __webpack_public_path__ + \"static/media/logoWhite.6b9aff31.png\";","module.exports = __webpack_public_path__ + \"static/media/restPlaceholder.47de2cff.jpg\";","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"../styles/textInputStyles.css\";\n\nexport default class TextInput extends React.Component {\n  static propTypes = {\n    type: PropTypes.string,\n    className: PropTypes.string,\n    placeholder: PropTypes.string,\n    value: PropTypes.string,\n    onChange: PropTypes.func\n  };\n\n  constructor() {\n    super();\n  }\n\n  render() {\n    return (\n      <input\n        type={this.props.type}\n        className={this.props.className}\n        placeholder={this.props.placeholder}\n        value={this.props.value}\n        onChange={event => this.props.onChange(event)}\n      />\n    );\n  }\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"../styles/commonButtonStyles.css\";\n\nexport default class CommonButton extends React.Component {\n  static propTypes = {\n    type: PropTypes.string,\n    className: PropTypes.string,\n    value: PropTypes.string,\n    onClick: PropTypes.func\n  };\n\n  constructor() {\n    super();\n  }\n\n  //Pass primary class for PrimaryButton Styles\n  render() {\n    return (\n      <button\n        type={this.props.type}\n        className={this.props.className}\n        onClick={this.props.onClick}\n      >\n        {this.props.value}\n      </button>\n    );\n  }\n}\n","import React from \"react\";\nimport \"../styles/loginPageStyles.css\";\nimport TextInput from \"../components/TextInput\";\nimport CommonButton from \"../components/CommonButton\";\nimport logo from \"../resources/images/logo.png\";\n\nexport default class LoginPage extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      userName: \"\",\n      password: \"\"\n    };\n  }\n\n  render() {\n    return (\n      <div className=\"main-container login-page\">\n        <div className=\"login-background\"></div>\n        <div className=\"login-form\">\n          <div className=\"app-logo\">\n            <img src={logo} />\n          </div>\n          <form className=\"login-form\" action=\"\">\n            <h1>Sign In</h1>\n            <div className=\"form-field\">\n              <TextInput\n                type=\"text\"\n                className=\"username\"\n                placeholder=\"Username\"\n                value={this.state.userName}\n                onChange={event =>\n                  this.setState({ userName: event.target.value })\n                }\n              />\n            </div>\n            <div className=\"form-field\">\n              <TextInput\n                type=\"password\"\n                className=\"password\"\n                placeholder=\"Password\"\n                value={this.state.password}\n                onChange={event =>\n                  this.setState({ password: event.target.value })\n                }\n              />\n            </div>\n            <div className=\"form-field\">\n              <CommonButton\n                className=\"primary\"\n                type=\"submit\"\n                value=\"LOGIN\"\n                onClick={() => this.props.history.push(\"/foodie-app/restaurantList\")}\n              />\n            </div>\n            <span className=\"forgot-password\">Forgot Password?</span>\n            <a className=\"link\" href=\"\">\n              Click Here\n            </a>\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport \"../styles/headerBarStyles.css\";\nimport \"../styles/commonStyles.css\";\nimport logoWhite from \"../resources/images/logoWhite.png\";\n\nexport class HeaderBar extends Component {\n  render() {\n    return (\n      <div className=\"header\">\n        <div className=\"header-content child\">\n          <img className=\"header-logo\" src={logoWhite} alt=\"logo\" />\n          <div className=\"user-name\">\n            <span>Hello, Prasanna Subramaniam</span>\n            <i className=\"user-icon fa fa-user-circle\"></i>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default HeaderBar;\n","import MockData from \"../resources/data/mockData.json\";\n\nexport class RestaurantService {\n  static restaurantsData = null;\n\n  /**\n   * Function to fetch the restaurant data from service and assign it to restaurantData Static variable.\n   */\n  static async fetchRestaurantsData() {\n    try {\n      RestaurantService.restaurantsData = MockData;\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  /**\n   * Function to get the list of restaurants data\n   * @returns restaurants list array\n   */\n  static async getRestaurantsList() {\n    let restaurantsList = [];\n    try {\n      if (!RestaurantService.restaurantsData) {\n        await RestaurantService.fetchRestaurantsData();\n      }\n\n      RestaurantService.restaurantsData.forEach(restaurant => {\n        let restData = {\n          id: restaurant.id,\n          name: restaurant.name,\n          reviews: restaurant.reviews,\n          cuisines: restaurant.cuisines,\n          rating: restaurant.rating,\n          img: restaurant.feature_image\n        };\n        restaurantsList.push(restData);\n      });\n      console.log(\"getRestaurantsList returns\", restaurantsList);\n    } catch (err) {\n      console.log(err);\n    }\n\n    return JSON.parse(JSON.stringify(restaurantsList));\n  }\n\n  /**\n   * Function to get a specific restaurant detail\n   * @param id - restaurant id\n   * @returns restaurant detail\n   */\n  static async getRestaurantDetail(id) {\n    let restaurantDetail = null;\n    try {\n      if (!RestaurantService.restaurantsData) {\n        await RestaurantService.fetchRestaurantsData();\n      }\n      restaurantDetail = RestaurantService.restaurantsData.find(\n        restaurant => id === restaurant.id\n      );\n      return JSON.parse(JSON.stringify(restaurantDetail));\n    } catch (err) {\n      console.log(err);\n    }\n    return restaurantDetail;\n  }\n}\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"../styles/restaurantCardStyles.css\";\nimport restPlaceHolder from \"../resources/images/restPlaceholder.jpg\";\n\nexport class RestaurantCard extends Component {\n  static propTypes = {\n    restaurant: PropTypes.object,\n    onClick: PropTypes.func\n  };\n\n  render() {\n    return (\n      <div\n        className=\"restaurant-card\"\n        onClick={() =>\n          this.props.history.push(\"/foodie-app/orders/\" + this.props.restaurant.id)\n        }\n      >\n        <img\n          className=\"restaurant-logo\"\n          src={\n            this.props.restaurant.img\n              ? this.props.restaurant.img\n              : restPlaceHolder\n          }\n          alt=\"restaurant pic\"\n        />\n        <div className=\"restaurant-name wrap-text\">\n          {this.props.restaurant.name}\n        </div>\n        <div className=\"restaurant-desc wrap-text\">\n          {this.props.restaurant.cuisines}\n        </div>\n        <div className=\"restaurant-location\">\n          <i className=\"fas fa-map-marker-alt\"></i>\n          <span className=\"distance\">{this.props.restaurant.rating}</span>\n        </div>\n        <div className=\"restaurant-review\">{`${this.props.restaurant.reviews} reviews`}</div>\n      </div>\n    );\n  }\n}\n\nexport default RestaurantCard;\n","import React, { Component } from \"react\";\nimport \"../styles/restaurantListPageStyles.css\";\nimport HeaderBar from \"../components/HeaderBar\";\nimport { RestaurantService } from \"../services/RestaurantService\";\nimport RestaurantCard from \"../components/RestaurantCard\";\n\nexport class RestaurantListPage extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isLoading: false,\n      error: null,\n      data: []\n    };\n  }\n\n  componentDidMount() {\n    this.fetchRestaurantList();\n  }\n\n  /**\n   * Fetch the list of restaurants from RestaurantService and updates the component state.\n   * Sets the state to display loading indicator during data fetch from service.\n   */\n  async fetchRestaurantList() {\n    this.setState({ isLoading: true });\n    let restaurantsList = await RestaurantService.getRestaurantsList();\n    if (restaurantsList.length > 0) {\n      this.setState({\n        isLoading: false,\n        data: restaurantsList,\n        error: null\n      });\n      console.log(this.state);\n    } else {\n      this.setState({\n        isLoading: false,\n        data: restaurantsList,\n        error: \"No Data Present!\"\n      });\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"restaurant-list-container\">\n        <HeaderBar />\n        <div className=\"restaurant-list-wrapper child\">\n          {this.state.data.map(res => {\n            return (\n              <div>\n                <RestaurantCard\n                  key={res.id}\n                  restaurant={res}\n                  history={this.props.history}\n                />\n              </div>\n            );\n          })}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default RestaurantListPage;\n","import React, { Component } from \"react\";\nimport \"../styles/orderItemStyles.css\";\n\nclass OrderItem extends Component {\n  render() {\n    const { item, onAddToCart } = this.props;\n    return (\n      <div className=\"item-container\">\n        <h3 className=\"item\">{item.name}</h3>\n        <div className=\"description\">\n          <div className=\"content\">{item.desc}</div>\n          <div className=\"action\">\n            <button onClick={() => onAddToCart(item)} className=\"add-to-cart\">\n              ADD\n            </button>\n          </div>\n        </div>\n        <div className=\"cost\">\n          <i className=\"fas fa-rupee-sign\"></i> {item.price}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default OrderItem;\n","import React, { Component } from \"react\";\nimport OrderItem from \"./OrderItem\";\nimport \"../styles/ordersViewStyles.css\";\n\nclass OrdersView extends Component {\n  render() {\n    const { restaurant, onAddToCart } = this.props;\n    return (\n      <div className=\"items\">\n        <div className=\"restaurant\">\n          <div className=\"child\">\n            <h1 className=\"title\">{restaurant.name}</h1>\n            <div className=\"address\">{restaurant.address}</div>\n            <div className=\"address\">{restaurant.cuisines}</div>\n          </div>\n        </div>\n        <div className=\"order-items\">\n          <div className=\"child\">\n            <h1 className=\"title\">Order Now</h1>\n            {restaurant.menu\n              ? restaurant.menu.map((item, index) => (\n                  <OrderItem\n                    key={index}\n                    item={item}\n                    onAddToCart={onAddToCart}\n                  />\n                ))\n              : null}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default OrdersView;\n","import React, { Component } from \"react\";\nimport \"../styles/cartItemStyles.css\";\n\nexport class CartItem extends Component {\n  render() {\n    const { item, onIncrement, onDecrement } = this.props;\n    return (\n      <div className=\"item-container\">\n        <div className=\"item-title\">{item.name}</div>\n        <div className=\"item-content\">\n          <div className=\"content-left spinner\">\n            <span>\n              <button type=\"button\" onClick={() => onDecrement(item)}>\n                -\n              </button>\n            </span>\n            <span>\n              <input type=\"text\" value={item.quantity} readOnly />\n            </span>\n            <span>\n              <button type=\"button\" onClick={() => onIncrement(item)}>\n                +\n              </button>\n            </span>\n          </div>\n          <div className=\"content-right cost\">\n            <i className=\"fas fa-rupee-sign\"></i>\n            <span id=\"item1Cost\" data=\"100\">\n              {item.price * item.quantity}\n            </span>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default CartItem;\n","import React, { Component } from \"react\";\nimport CartItem from \"./CartItem\";\nimport CommonButton from \"../components/CommonButton\";\nimport \"../styles/cartViewStyles.css\";\n\nclass CartView extends Component {\n  render() {\n    const { cart, onIncrement, onDecrement } = this.props;\n    return (\n      <div className=\"my-cart\">\n        <form className=\"order-form\" action=\"\">\n          <h3 className=\"title\">My Cart</h3>\n          {cart.items\n            ? cart.items.map((item, index) => (\n                <CartItem\n                  key={index}\n                  item={item}\n                  onIncrement={onIncrement}\n                  onDecrement={onDecrement}\n                />\n              ))\n            : null}\n\n          <div className=\"total-container\">\n            <div className=\"item-content bold\">\n              <div className=\"content-left\">Sub Total</div>\n              <div className=\"content-right\">\n                <i className=\"fas fa-rupee-sign\"></i> {cart.subTotal}\n              </div>\n            </div>\n            <div className=\"item-content\">\n              <div className=\"content-left\">Delivery Charges</div>\n              <div className=\"content-right\">{cart.deliveryCharges}</div>\n            </div>\n            <div className=\"item-content\">\n              <div className=\"content-left\">Coupon (SUPER)</div>\n              <div className=\"content-right\">-{cart.coupon}</div>\n            </div>\n            <div className=\"item-content bold\">\n              <div className=\"content-left\">Grand Total</div>\n              <div className=\"content-right\">\n                <i className=\"fas fa-rupee-sign\"></i> {cart.grandTotal}\n              </div>\n            </div>\n          </div>\n          <div className=\"form-field\">\n            <CommonButton className=\"primary\" type=\"submit\" value=\"PAY NOW\" />\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default CartView;\n","import React, { Component } from \"react\";\nimport \"../styles/ordersPageStyles.css\";\nimport HeaderBar from \"../components/HeaderBar\";\nimport { RestaurantService } from \"../services/RestaurantService\";\nimport OrdersView from \"../components/OrdersView\";\nimport CartView from \"../components/CartView\";\nclass OrdersPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      restaurant: {},\n      cart: {\n        items: [],\n        subTotal: 0,\n        deliveryCharges: 45,\n        coupon: 90,\n        grandTotal: 0\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.fetchRestaurantDetails(this.props.match.params.id);\n  }\n\n  /**\n   * Fetch the restaurant details from RestaurantService and updates the component state.\n   * Sets the state to display loading indicator during data fetch from service.\n   */\n  async fetchRestaurantDetails(id) {\n    this.setState({ isLoading: true });\n    let restaurantDetails = await RestaurantService.getRestaurantDetail(id);\n    if (restaurantDetails) {\n      this.setState({\n        isLoading: false,\n        restaurant: restaurantDetails,\n        error: null\n      });\n    } else {\n      this.setState({\n        isLoading: false,\n        restaurant: null,\n        error: \"Restaurant detail not found!\"\n      });\n    }\n  }\n\n  handleAddToCart = item => {\n    let cart = { ...this.state.cart };\n\n    // If an element is already present increment otherwise add to cart\n    let itemPresent = cart.items.findIndex(element => element.id === item.id);\n    if (itemPresent >= 0) {\n      this.handleIncrement(item);\n    } else {\n      const newItem = { ...item, quantity: 1 };\n      cart.items.push(newItem);\n      this.calculateTotal(cart);\n    }\n  };\n\n  calculateTotal = cart => {\n    //Calculate Totals and update\n    cart.subTotal = 0;\n    for (let item of cart.items) {\n      cart.subTotal = cart.subTotal + item.price * item.quantity;\n    }\n    cart.grandTotal = cart.subTotal + cart.deliveryCharges - cart.coupon;\n    cart.grandTotal = cart.grandTotal > 0 ? cart.grandTotal : 0;\n    this.setState({ cart });\n  };\n\n  handleIncrement = item => {\n    let cart = { ...this.state.cart };\n    let newItems = [...this.state.cart.items];\n\n    //Update the item in cart\n    newItems[newItems.findIndex(element => element.id === item.id)].quantity++;\n    cart.items = newItems;\n    this.calculateTotal(cart);\n  };\n\n  handleDecrement = item => {\n    let cart = { ...this.state.cart };\n    let newItems = [...this.state.cart.items];\n\n    //Update the item in cart\n    if (item.quantity !== 1) {\n      newItems[newItems.findIndex(element => element.id === item.id)]\n        .quantity--;\n    } else {\n      newItems.splice(\n        newItems.findIndex(element => element.id === item.id),\n        1\n      );\n    }\n    cart.items = newItems;\n    this.calculateTotal(cart);\n  };\n\n  render() {\n    return (\n      <div className=\"main-container order-page\">\n        <HeaderBar />\n        <div className=\"order\">\n          <OrdersView\n            restaurant={this.state.restaurant}\n            onAddToCart={this.handleAddToCart}\n          />\n          <CartView\n            cart={this.state.cart}\n            onIncrement={this.handleIncrement}\n            onDecrement={this.handleDecrement}\n          />\n        </div>\n      </div>\n    );\n  }\n}\nexport default OrdersPage;\n","import React from \"react\";\nimport \"./App.css\";\n\nimport { BrowserRouter, Route } from \"react-router-dom\";\n\nimport LoginPage from \"./pages/LoginPage\";\nimport RestaurantListPage from \"./pages/RestaurantListPage\";\nimport OrdersPage from \"./pages/OrdersPage\";\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <Route exact path={\"/foodie-app/\"} component={LoginPage}></Route>\n      <Route\n        exact\n        path={\"/foodie-app/restaurantList\"}\n        component={RestaurantListPage}\n      ></Route>\n      <Route\n        exact\n        path={\"/foodie-app/orders/:id\"}\n        render={props => <OrdersPage {...props} />}\n      ></Route>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport \"./styles/all.min.css\";\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}